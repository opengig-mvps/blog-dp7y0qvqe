
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
      
model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  password         String?
  username         String    @unique
  name             String?
  role             String    @default("user")
  googleId         String?   @unique
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  blogs            Blog[]
  payments         Payment[]
  blogAccesses     BlogAccess[]
}

model Blog {
  id               Int       @id @default(autoincrement())
  title            String
  content          String
  mediaUrl         String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  authorId         Int
  author           User      @relation(fields: [authorId], references: [id])

  payments         Payment[]
  accesses         BlogAccess[]
}

model Payment {
  id               Int       @id @default(autoincrement())
  amount           Float
  paymentStatus    String
  paymentDate      DateTime  @default(now())
  userId           Int
  blogId           Int
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  user             User      @relation(fields: [userId], references: [id])
  blog             Blog      @relation(fields: [blogId], references: [id])
}

model BlogAccess {
  id               Int       @id @default(autoincrement())
  userId           Int
  blogId           Int
  accessGranted    Boolean   @default(false)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  user             User      @relation(fields: [userId], references: [id])
  blog             Blog      @relation(fields: [blogId], references: [id])

  @@unique([userId, blogId])
}